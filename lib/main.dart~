import 'package:flutter/material.dart';
import 'package:mobile_apps/core/service/api/api_service.dart';
import 'package:mobile_apps/core/service/local/shared_preferences_service.dart';
import 'package:mobile_apps/core/service/workManager/workmanager_service.dart';
import 'package:mobile_apps/core/utils/setting_state.dart';
import 'package:mobile_apps/presentation/viewmodels/food/food_list_provider.dart';
import 'package:mobile_apps/presentation/viewmodels/food/search_food_provider.dart';
import 'package:mobile_apps/presentation/viewmodels/main/beranda/home_provider.dart';
import 'package:mobile_apps/presentation/viewmodels/main/camera/camera_provider.dart';
import 'package:mobile_apps/presentation/viewmodels/main/profile/setting_state_provider.dart';
import 'package:mobile_apps/presentation/viewmodels/auth/user/shared_preferences_provider.dart';
import 'package:mobile_apps/presentation/static/main/navigation_route.dart';
import 'package:mobile_apps/presentation/styles/theme/jejak_rasa_theme.dart';
import 'package:mobile_apps/presentation/viewmodels/main/index_nav_provider.dart';
import 'package:mobile_apps/presentation/viewmodels/profile/change_profile_provider.dart';
import 'package:mobile_apps/presentation/viewmodels/resto/food_place_detail_view_model.dart';
import 'package:mobile_apps/presentation/viewmodels/resto/resto_food_viewmodel.dart';
import 'package:mobile_apps/presentation/viewmodels/resto/update_food_place_viewmodel.dart';
import 'package:mobile_apps/presentation/views/login/login_screen.dart';
import 'package:mobile_apps/presentation/views/main/main_screen.dart';
import 'package:mobile_apps/presentation/views/main/profile/account-information/change_password_screen.dart';
import 'package:mobile_apps/presentation/views/main/profile/account-information/edit_profile_screen.dart';
import 'package:mobile_apps/presentation/views/main/profile/admin-food-data/admin_food_list_screen.dart';
import 'package:mobile_apps/presentation/views/main/profile/admin-food-data/create_food_list_screen.dart';
import 'package:mobile_apps/presentation/views/main/profile/admin-food-data/edit_food_list_screen.dart';
import 'package:mobile_apps/presentation/views/register/register_screen.dart';
import 'package:mobile_apps/presentation/views/resto_food/edit_food_place_screen.dart';
import 'package:mobile_apps/presentation/views/resto_food/map_screen.dart';
import 'package:mobile_apps/presentation/views/splash/splash_screen.dart';
import 'package:mobile_apps/presentation/views/welcome/welcome_screen.dart';
import 'package:mobile_apps/presentation/views/food_detail/food_detail_screen.dart';
import 'package:mobile_apps/presentation/views/food_place_detail/food_place_detail_screen.dart';
import 'package:mobile_apps/presentation/views/food_place/food_place_screen.dart';
import 'package:provider/provider.dart';
import 'package:shared_preferences/shared_preferences.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  String route = NavigationRoute.splashRoute.path;

  final prefs = await SharedPreferences.getInstance();

  runApp(
    MultiProvider(
      providers: [
        Provider(create: (context) => SharedPreferencesService(prefs)),
        Provider(create: (context) => ApiService()),
        Provider(create: (context) => WorkmanagerService()..init()),

        ChangeNotifierProvider(
          create: (context) => MapViewModel(apiService: context.read<ApiService>()),
        ),
        ChangeNotifierProvider(
          create: (context) => FoodPlaceDetailViewModel(apiService: context.read<ApiService>()),
        ),

        ChangeNotifierProvider(
          create: (context) => SharedPreferencesProvider(
            context.read<SharedPreferencesService>(),
          ),
        ),

        ChangeNotifierProvider(
          create: (context) => HomeProvider(context.read<ApiService>()),
        ),
        ChangeNotifierProvider(create: (context) => SettingStateProvider()),

        ChangeNotifierProvider(create: (context) => IndexNavProvider()),
        ChangeNotifierProvider(create: (context) => CameraProvider()),
        ChangeNotifierProvider(
          create: (context) =>
              ChangeProfileProvider(context.read<ApiService>()),
        ),
        ChangeNotifierProvider(
          create: (context) => FoodListProvider(context.read<ApiService>()),
        ),
        ChangeNotifierProvider(
          create: (context) => SearchFoodProvider(context.read<ApiService>()),
        ),

        ChangeNotifierProvider(create: (context) => UpdateFoodPlaceViewModel(context.read<ApiService>()))
      ],
      child: MyApp(initialRoute: route),
    ),
  );
}

class MyApp extends StatefulWidget {
  final String initialRoute;
  const MyApp({super.key, required this.initialRoute});

  @override
  State<MyApp> createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  @override
  void initState() {
    super.initState();

    final settingStateProvider = context.read<SettingStateProvider>();
    final sharedPreferencesProvider = context.read<SharedPreferencesProvider>();

    Future.microtask(() async {
      sharedPreferencesProvider.getIsDarkThemeValue();

      final theme = sharedPreferencesProvider.isDarkTheme;

      if (theme != null) {
        settingStateProvider.isDarkThemeState = theme
            ? SettingState.enable
            : SettingState.dissable;
      }
    });
  }

  @override
  Widget build(BuildContext context) {
    return Consumer<SettingStateProvider>(
      builder: (context, themeProvider, child) {
        return MaterialApp(
          title: 'Jejak Rasa',
          debugShowCheckedModeBanner: false,
          theme: JejakRasaTheme.lightTheme,
          darkTheme: JejakRasaTheme.darkTheme,
          themeMode: themeProvider.isDarkThemeState.isEnable
              ? ThemeMode.dark
              : ThemeMode.light,
          initialRoute: widget.initialRoute,
          routes: {
            NavigationRoute.splashRoute.path: (context) => SplashScreen(),
            NavigationRoute.welcomeRoute.path: (context) => WelcomeScreen(),
            NavigationRoute.loginRoute.path: (context) => LoginScreen(),
            NavigationRoute.registerRoute.path: (context) => RegisterScreen(),
            NavigationRoute.mainRoute.path: (context) => MainScreen(),
            NavigationRoute.changePasswordRoute.path: (context) =>
                ChangePasswordScreen(),
            NavigationRoute.editProfileRoute.path: (context) =>
                EditProfileScreen(),
            NavigationRoute.foodDetailRoute.path: (context) =>
                FoodDetailScreen(),
            NavigationRoute.foodPlaceDetailRoute.path: (context) =>
                FoodPlaceDetailScreen(),
            NavigationRoute.foodPlaceScreenRoute.path: (context) =>
                FoodPlaceScreen(),
            NavigationRoute.adminFoodList.path: (context) =>
                AdminFoodListScreen(),
            NavigationRoute.createAdminFoodList.path: (context) =>
                CreateFoodListScreen(),
            NavigationRoute.mapFoodPlaceRoute.path: (context) =>
                MapScreen(),
            NavigationRoute.editFoodPlaceRoute.path: (context) =>
                EditFoodPlaceScreen(), // Ganti dengan class screen Anda

          },
          onGenerateRoute: (settings) {
            if (settings.name == NavigationRoute.editAdminFoodList.path) {
              final args = settings.arguments as Map<String, dynamic>;
              return MaterialPageRoute(
                builder: (context) => EditFoodListScreen(foodData: args),
              );
            }
            return null;
          },
        );
      },
    );
  }
}
