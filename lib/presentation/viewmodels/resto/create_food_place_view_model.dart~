import 'package:flutter/material.dart';

import '../../../core/service/api/api_service.dart';
import '../../../data/models/main/resto/create_food_place_request.dart';
// ❌ Hapus import CreateFoodPlaceResponse, karena sudah tidak digunakan
// import '../../../data/models/main/resto/create_food_place_response.dart';

// ⭐️ Import model response yang baru dan benar
import '../../../data/models/main/resto/resto_food_model.dart';


class CreateFoodPlaceViewModel extends ChangeNotifier {
  final ApiService _apiService;

  CreateFoodPlaceViewModel({required ApiService apiService})
      : _apiService = apiService;

  bool _isLoading = false;
  String? _errorMessage;

  // ⭐️ PERUBAHAN: Sekarang menyimpan RestoPlaceModel yang lengkap
  RestoPlaceModel? _createdFoodPlace;

  bool get isLoading => _isLoading;
  String? get errorMessage => _errorMessage;

  // ⭐️ PERUBAHAN: Getter mengembalikan RestoPlaceModel
  RestoPlaceModel? get createdFoodPlace => _createdFoodPlace;

  Future<void> createFoodPlace(CreateFoodPlaceRequest request) async {
    _isLoading = true;
    _errorMessage = null;
    _createdFoodPlace = null;
    notifyListeners();

    try {
      // API Service sekarang mengembalikan RestoPlaceModel
      final response = await _apiService.createFoodPlace(request);

      _createdFoodPlace = response;
    } catch (e) {
      // Penanganan error yang lebih bersih
      _errorMessage = e.toString().contains('Exception:')
          ? e.toString().replaceFirst('Exception:', '').trim()
          : "Gagal membuat tempat makan.";
    } finally {
      _isLoading = false;
      notifyListeners();
    }
  }
}